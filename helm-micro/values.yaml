---
# Default values for microservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  replicaCount: 1
  environment:
  # list of key: value
  # GLOBAL1: value

## Set default image, imageTag, and imagePullPolicy.
## ref: https://hub.docker.com/r/apache/nifi/
##


image: dpage/pgadmin4
imageConfig:
  repository:
  tag: "latest"
  pullPolicy: IfNotPresent

#command: ['echo pre-install Job Pod is Running']

replicaCount: 1

# command: ["/bin/sh","-c"]
# args: ["echo 'consuming a message'; sleep 5"]

nameOverride: deployment
fullnameOverride: ""


# Annotation for the Deployment
annotations: {}

#ARGS:
args:


# List of services
services:
  - name: web
    type: NodePort
    annotations: {}
    specs:
      - port: 80
        targetPort: 80
        name: pgadmin-svc

environment:
  - name: PGADMIN_DEFAULT_EMAIL
    valueFrom:
      secretKeyRef:
        name: postgres-secret
        key: pgadmin-email
  - name: PGADMIN_DEFAULT_PASSWORD
    valueFrom:
      secretKeyRef:
        name: postgres-secret
        key: pgadmin-password

initContainers:
  - name: download
    image: busybox
    command:
      - "wget"
      - "-O"
      - "/personal/data/ig.sql"
      - "https://raw.githubusercontent.com/darefalola7/practiseSQL/main/ig.sql"
    volumeMount:
      name: pgadmin-pv-claim-volume
      mountPath: /personal/data


dbConfigMap: false
eventConfigMap: false
redisConfigMap: false
#fileConfigMap:
#  - name: sql_data
#    mountPath: /popdata/sql
#    volumeName: config

#Remember
#Default pgadmin storage location: /var/lib/pgadmin/storage/[username]

volumes:
  enabled: true
  pvc:
    enabled: true
    existing_claim:
    name: pgadmin-pv-claim
    mountPath: /personal/data
    size: 4Gi
    class: hostpath
    accessModes:
      - ReadWriteOnce

  configMaps:
#    - name: sql_data
#      mountPath: /popdata/sql
#      data:
#        test.conf: |
#          hello

## Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  enabled: false

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    cpu: 2
    memory: 2000Mi
  requests:
    cpu: 500m
    memory: 500Mi